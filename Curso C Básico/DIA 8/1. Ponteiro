#include <stdio.h>
int main() {
   int i, *p;
   i = 10;
   p = &i;
   printf("Valor armazenado no int. que p aponta\n");
   printf("%d\n", *p);           /////////// IGUAL A 10 - valor contido em p
   printf("Endereco da variavel i: %p\n", p);  ///////////////// ENDEREÇO ---- %p para heaxdecimal, %d para decimal, tambem funciona ENDEREÇO QUE P ESTÁ APONTANDO
   printf("Endereco da variavel i: %p\n", &i); ///////////////// ENDEREÇO IGUAL AO DE CIMA
   printf("Endereco do ponteiro p: %p\n", &p); //////////////// ENDEREÇO DIFERENTE, O ENDEREÇO PRÓPRIO, ENDEREÇO DE P
   return 0;
}
// *p = **j ponteiro apontando pra ponteiro  SEMPRE DA ESQUERDA PRA DIREITA p = &i; p é um apelido de i

// & é o endereço, * devolve o valor
// & aponta para o endereço(&i, &p apontam coisas diferentes), p sozinho para o endereço que ele está apontando (&i), p também aponta para o endereço, *p é o valor de i
// *p = pessoa -> idade (APONTA PARA O IDADE QUE ESTÁ CONTIDO NA STRUCT PESSOA
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include <stdio.h>
int main() {
   int num, valor;
   int *p;
   num = 55;
   p = &num;
   valor = *p;
   printf("Endereco para onde o ponteiro aponta: %p\n", p);
   printf("Endereco da variavel num: %p\n", &num);
   printf("Valor da variavel apontada: %d\n", *p);
   printf("Valor: %d\n", valor);
   return 0;
}
